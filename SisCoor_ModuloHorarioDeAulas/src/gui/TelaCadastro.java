/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.security.MessageDigest;
import java.util.ArrayList;
import utilitarios.AreaAtuacao;
import utilitarios.AreaAtuacaoDAO;
import utilitarios.Criptografia;
import utilitarios.Professor;
import utilitarios.ProfessorDAO;
import utilitarios.Perguntas;
import utilitarios.PerguntasDAO;

/**
 * Classe responsável pela implementação da tela de cadastro.
 * @author Tarcísio
 */
public class TelaCadastro extends javax.swing.JFrame {

    /**
     * Creates new form TelaCadastro
     */
    public TelaCadastro() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfNomeCad = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfEmailCad = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tfUsernameCad = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        comboAreaAtuacao = new javax.swing.JComboBox();
        tfAreaAtuacao = new javax.swing.JTextField();
        btVoltar = new javax.swing.JButton();
        btCad = new javax.swing.JButton();
        pfSenhaCad = new javax.swing.JPasswordField();
        jLabel9 = new javax.swing.JLabel();
        lbErro = new javax.swing.JLabel();
        pfSenhaRep = new javax.swing.JPasswordField();
        jLabel10 = new javax.swing.JLabel();
        lbCadastroArea = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        comboPergunta = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jTFPergunta = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTFdataNasc = new javax.swing.JTextField();

        jLabel7.setText("Senha:");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/cats.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Cadastre-se:");

        jLabel2.setText("Nome Completo:");

        tfNomeCad.setToolTipText("Entre com seu nome completo.");

        jLabel4.setText("E-mail:");

        tfEmailCad.setToolTipText("Entre com um e-mail válido.");

        jLabel5.setText("Usuário:");

        tfUsernameCad.setToolTipText("Mínimo de 6 dígitos.");

        jLabel6.setText("Senha:");

        jLabel8.setText("Área de Atuação:");

        comboAreaAtuacao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Outro(a)" }));
        comboAreaAtuacao.setToolTipText("Caso sua área não esteja listada aqui, crie uma selecionando \"Outro(a)\".");
        comboAreaAtuacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboAreaAtuacaoActionPerformed(evt);
            }
        });

        tfAreaAtuacao.setEditable(false);

        btVoltar.setMnemonic('V');
        btVoltar.setText("Voltar");
        btVoltar.setToolTipText("Voltar à tela de login.");
        btVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltarActionPerformed(evt);
            }
        });

        btCad.setMnemonic('c');
        btCad.setText("Cadastrar");
        btCad.setToolTipText("Cadastrar novo(a) usuário(a) e/ou área de atuação.");
        btCad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCadActionPerformed(evt);
            }
        });

        pfSenhaCad.setToolTipText("Mínimo de 6 dígitos.");

        jLabel9.setText("Obs.: Todos os campos são obrigatórios!");

        lbErro.setForeground(new java.awt.Color(250, 0, 0));

        jLabel10.setText("Repita sua Senha:");

        lbCadastroArea.setForeground(new java.awt.Color(0, 0, 250));

        jLabel11.setText("Pergunta Secreta:");

        comboPergunta.setToolTipText("Caso sua área não esteja listada aqui, crie uma selecionando \"Outro(a)\".");

        jLabel12.setText("Resposta:");

        jLabel13.setText("Data de nascimento:");

        jTFdataNasc.setText("dd/mm/aaaa");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(166, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(134, 134, 134))
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbErro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel2)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfNomeCad)
                            .addComponent(tfEmailCad)
                            .addComponent(tfUsernameCad, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pfSenhaCad)
                            .addComponent(comboPergunta, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pfSenhaRep)
                            .addComponent(jTFPergunta)
                            .addComponent(comboAreaAtuacao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfAreaAtuacao)
                            .addComponent(jTFdataNasc)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btVoltar)
                        .addGap(62, 62, 62)
                        .addComponent(lbCadastroArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(35, 35, 35)
                        .addComponent(btCad)))
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel3)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfNomeCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFdataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfEmailCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfUsernameCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pfSenhaCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pfSenhaRep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboPergunta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFPergunta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboAreaAtuacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addComponent(tfAreaAtuacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(lbCadastroArea)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addGap(12, 12, 12))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btCad)
                            .addComponent(btVoltar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(lbErro)
                .addGap(1, 1, 1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Método responsável por adicionar um item no Combo Box de áreas de atuação.
     * @param nomeItem nome do item.
     */
    public void addItem(String nomeItem) {
        comboAreaAtuacao.addItem(nomeItem);
    }
    
    public void addItemP(String nomeItem)
    {
        comboPergunta.addItem(nomeItem);
    }

    private void btCadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadActionPerformed
        lbCadastroArea.setText("");
        lbErro.setText("");
        
        Professor prof = new Professor();
        AreaAtuacao aa = new AreaAtuacao();
        ProfessorDAO pf = new ProfessorDAO();
        AreaAtuacaoDAO area = new AreaAtuacaoDAO();
        PerguntasDAO perg = new PerguntasDAO();
        ArrayList<Professor> aProf = pf.listar();
        ArrayList<AreaAtuacao> aArea = area.listar();
        ArrayList<Perguntas> aPerg = perg.listar();
        
        int areaAtuacao, codperg;
        boolean encontrou = false;
        boolean erroSenha = false;
        boolean erroEmail = false;
        boolean erroArea = false;
        boolean erroSenhaRep = false;
        boolean erroAreaRep = false;
        boolean errodata_nasc = false;
        boolean erroPerg = false;
        boolean deveInserir = true;

        if (tfNomeCad.getText().isEmpty() || tfEmailCad.getText().isEmpty() || tfEmailCad.getText().isEmpty() || String.valueOf(pfSenhaCad.getPassword()).isEmpty() || String.valueOf(pfSenhaRep.getPassword()).isEmpty() || (jTFdataNasc.getText().isEmpty()) || jTFPergunta.getText().isEmpty()) {
            lbErro.setText("Preencha todos os campos!");
            pfSenhaCad.setText("");
            pfSenhaRep.setText("");
        }

        for (int i = 0; i < aProf.size(); i++) {
            if (tfEmailCad.getText().equals(aProf.get(i).getEmail()) && !tfEmailCad.getText().equals(aProf.get(i).getEmail())) {
                lbErro.setText("Usuário já cadastrado! Tente novamente");
                tfUsernameCad.setText("");
                encontrou = true;
                break;
            } else if (tfEmailCad.getText().equals(aProf.get(i).getEmail()) && !tfUsernameCad.getText().equals(aProf.get(i).getUsername())) {
                lbErro.setText("E-mail já cadastrado! Tente novamente");
                tfEmailCad.setText("");
                encontrou = true;
                break;
            } else if (tfUsernameCad.getText().equals(aProf.get(i).getUsername()) && tfEmailCad.getText().equals(aProf.get(i).getEmail())) {
                lbErro.setText("Usuário e e-mail já cadastrados! Tente novamente");
                tfEmailCad.setText("");
                tfUsernameCad.setText("");
                encontrou = true;
                break;
            }
            lbErro.setText("");
        }

        if (encontrou == false) {
            if (String.valueOf(pfSenhaCad.getPassword()).length() < 6 && !(tfUsernameCad.getText().length() < 6)) {
                lbErro.setText("Campo 'Senha' deve conter 6 dígitos alfanuméricos ou mais!");
                pfSenhaCad.setText("");
                pfSenhaRep.setText("");
                erroSenha = true;
            } else if (tfUsernameCad.getText().length() < 6 && !(String.valueOf(pfSenhaCad.getPassword()).length() < 6)) {
                lbErro.setText("Campo 'Usuário' deve conter 6 dígitos alfanuméricos ou mais!");
                pfSenhaCad.setText("");
                pfSenhaRep.setText("");
                erroSenha = true;
            } else if (tfUsernameCad.getText().length() < 6 && String.valueOf(pfSenhaCad.getPassword()).length() < 6) {
                lbErro.setText("Campos 'Usuário' e 'Senha' devem conter 6 dígitos alfanuméricos ou mais!");
                pfSenhaCad.setText("");
                pfSenhaRep.setText("");
                erroSenha = true;
            } else {
                lbErro.setText("");
                erroSenha = false;
            }
            
            if (erroSenha == false) {
                if (tfEmailCad.getText().indexOf('@') == -1 || tfEmailCad.getText().indexOf('.') == -1) {
                    lbErro.setText("Digite um E-mail válido!");
                    pfSenhaCad.setText("");
                    pfSenhaRep.setText("");
                    erroEmail = true;
                } else {
                    lbErro.setText("");
                    erroEmail = false;
                }
                if(erroEmail==false)
                {
                    if(jTFdataNasc.getText().equals("dd/mm/aaaa"))
                    {
                        lbErro.setText("Digite uma data de nascimento valida!");
                        errodata_nasc=true;
                    }
                    
                    else
                    {
                        lbErro.setText("");
                        errodata_nasc = false;
                    }
                    
                    if(errodata_nasc==false)
                    {
                        if(jTFPergunta.getText().equals(""))
                        {
                            lbErro.setText("Digite resposta valida!");
                            erroPerg=true;
                        }

                        else
                        {
                            lbErro.setText("");
                            erroPerg = false;
                        }
                        
                            if (erroPerg== false) {
                                if (comboAreaAtuacao.getSelectedItem().equals("Outro(a)") && tfAreaAtuacao.getText().isEmpty()) {
                                    lbErro.setText("Digite sua area de atuação!");
                                    pfSenhaCad.setText("");
                                    pfSenhaRep.setText("");
                                    erroArea = true;
                                } else {
                                    lbErro.setText("");
                                    erroArea = false;
                                }

                                if (erroArea == false) {
                                    if (!String.valueOf(pfSenhaCad.getPassword()).equals(String.valueOf(pfSenhaRep.getPassword()))) {
                                        lbErro.setText("As senhas não conferem!");
                                        pfSenhaCad.setText("");
                                        pfSenhaRep.setText("");
                                        erroSenhaRep = true;
                                    } else {
                                        lbErro.setText("");
                                        erroSenhaRep = false;
                                    }

                                    if(comboAreaAtuacao.getSelectedItem().equals("Outro(a)")) {
                                        for(int i=0; i < aArea.size(); i++){
                                            if(tfAreaAtuacao.getText().equals(aArea.get(i).getNomeArea())){
                                                lbErro.setText("Área já cadastrada!");
                                                comboAreaAtuacao.setSelectedItem(aArea.get(i).getNomeArea());
                                                tfAreaAtuacao.setText("");
                                                tfAreaAtuacao.setEditable(false);
                                                erroAreaRep = true;
                                                break;
                                            }
                                        }

                                        if(erroAreaRep==false){
                                            aa.setNomeArea(tfAreaAtuacao.getText());
                                            area.inserir(aa);
                                            addItem(aa.getNomeArea());
                                            comboAreaAtuacao.setSelectedItem(aa.getNomeArea());
                                            tfAreaAtuacao.setText("");
                                            deveInserir = false;
                                            btCadActionPerformed(evt);
                                        }
                                    }
                                }
                            }
                    }
                }
            }

        if (encontrou == false && erroArea == false && erroEmail == false && erroSenha == false && erroSenhaRep == false && erroAreaRep == false && errodata_nasc ==false && erroPerg==false && deveInserir == true) {
            String senhaC = String.valueOf(pfSenhaCad.getPassword());
            
            aArea = area.listar();
            
            for (int i = 0; i < aArea.size(); i++) {
                if (comboAreaAtuacao.getSelectedItem().equals(aArea.get(i).getNomeArea())) {
                    prof.setAreaAtuacao(aArea.get(i).getCod());
                    break;
                }
            }
            
            aPerg = perg.listar();
            
            for (int i = 0; i < aPerg.size(); i++) {
                if (comboPergunta.getSelectedItem().equals(aPerg.get(i).getPergunta())) {
                    prof.setCodPerg(aPerg.get(i).getCod());
                    break;
                }
            }

            prof.setNome(tfNomeCad.getText());
            prof.setUsername(tfUsernameCad.getText());
            prof.setEmail(tfEmailCad.getText());
            prof.setSenha(Criptografia.criptografar(senhaC));
            prof.setData_de_nascimento(jTFdataNasc.getText());
            prof.setRespostaperg(Criptografia.criptografar(jTFPergunta.getText()));
            pf.inserir(prof);
            
            lbCadastroArea.setText("Cadastro realizado com sucesso!");
        }
        }
    }//GEN-LAST:event_btCadActionPerformed

    private void comboAreaAtuacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboAreaAtuacaoActionPerformed
        if (comboAreaAtuacao.getSelectedItem().equals("Outro(a)")) {
            tfAreaAtuacao.setEditable(true);
        } else {
            tfAreaAtuacao.setEditable(false);
        }
    }//GEN-LAST:event_comboAreaAtuacaoActionPerformed

    private void btVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btVoltarActionPerformed
public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Visualizar_restricao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Visualizar_restricao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Visualizar_restricao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Visualizar_restricao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCadastro().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCad;
    private javax.swing.JButton btVoltar;
    private javax.swing.JComboBox comboAreaAtuacao;
    private javax.swing.JComboBox comboPergunta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTFPergunta;
    private javax.swing.JTextField jTFdataNasc;
    private javax.swing.JLabel lbCadastroArea;
    private javax.swing.JLabel lbErro;
    private javax.swing.JPasswordField pfSenhaCad;
    private javax.swing.JPasswordField pfSenhaRep;
    private javax.swing.JTextField tfAreaAtuacao;
    private javax.swing.JTextField tfEmailCad;
    private javax.swing.JTextField tfNomeCad;
    private javax.swing.JTextField tfUsernameCad;
    // End of variables declaration//GEN-END:variables
}
